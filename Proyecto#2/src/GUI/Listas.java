
package GUI;

import java.awt.BorderLayout;
import java.awt.Color;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

        

public class Listas extends javax.swing.JFrame {

    
     private DefaultTableModel modelo = new DefaultTableModel(new Object[]{"ID", "Nombre", "Carrera"}, 0);
    
    
    public Listas() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 241, 232));

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Lista Estudiantes");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton1MouseExited(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(0, 0, 0));
        jButton2.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Lista Promedios");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton2MouseExited(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(0, 153, 102));

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/566095.png"))); // NOI18N
        jButton3.setBorderPainted(false);
        jButton3.setContentAreaFilled(false);
        jButton3.setFocusPainted(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton3)
                .addContainerGap(35, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(109, 109, 109)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(138, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(141, 141, 141)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 132, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(171, 171, 171))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 730, 640));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        
     // Crear un nuevo JFrame para mostrar la JTable
    JFrame frame = new JFrame("Promedios de Estudiantes");
    frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE); // Configurar acción de cierre
    frame.setSize(800, 600); // Establecer tamaño del JFrame
    frame.setLayout(new BorderLayout()); // Establecer el layout del JFrame como BorderLayout

    // Crear un JPanel para los filtros
    JPanel panelFiltros = new JPanel();
    JComboBox<String> filtroPromedio = new JComboBox<>(new String[]{"Todos", "Promedio >= 70", "Promedio < 70"});
    JComboBox<String> filtroCarrera = new JComboBox<>(new String[]{"Todas", "Informatica", "Administracion", "Criminologia", "Contaduria", "Educacion"});
    panelFiltros.add(new JLabel("Filtrar por promedio:")); // Agregar etiqueta para filtrar por promedio
    panelFiltros.add(filtroPromedio); // Agregar JComboBox para filtrar por promedio
    panelFiltros.add(new JLabel("Filtrar por carrera:")); // Agregar etiqueta para filtrar por carrera
    panelFiltros.add(filtroCarrera); // Agregar JComboBox para filtrar por carrera
    frame.add(panelFiltros, BorderLayout.NORTH); // Agregar panel de filtros al JFrame en la posición norte

    // Crear un JPanel para la tabla
    JPanel panelTabla = new JPanel();
    JTable table = new JTable(); // Crear una nueva JTable
    JScrollPane scrollPane = new JScrollPane(table); // Crear un JScrollPane para la JTable
    panelTabla.add(scrollPane); // Agregar JScrollPane al JPanel
    frame.add(panelTabla, BorderLayout.CENTER); // Agregar panel de la tabla al JFrame en la posición centro

    // Crear un botón para mostrar la tabla filtrada
    JButton botonMostrarTabla = new JButton("Mostrar Tabla");
    frame.add(botonMostrarTabla, BorderLayout.SOUTH); // Agregar botón al JFrame en la posición sur

    // Agregar un ActionListener al botón
    botonMostrarTabla.addActionListener(e -> {
    // Obtener los datos del archivo de texto "promedios.txt" y aplicar los filtros
    ArrayList<String[]> datosFiltrados = obtenerDatosFiltrados("promedios.txt",
            filtroPromedio.getSelectedItem().toString(),
            filtroCarrera.getSelectedItem().toString());

    // Configurar el modelo de la JTable con los datos filtrados y nombres de columna
    DefaultTableModel o = new DefaultTableModel(new Object[]{"ID", "Carrera", "Promedio"}, 0);
    
    for (String[] fila : datosFiltrados) {
        o.addRow(fila);
    }
    table.setModel(o); // Establecer el modelo en la JTable
    });

    frame.setVisible(true); // Hacer visible el JFrame
    frame.setLocationRelativeTo(null); // Colocar el JFrame en el centro de la pantalla


        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

         // Crear un nuevo JFrame para mostrar la JTable
        JFrame frame = new JFrame("Datos de Estudiantes");
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        frame.setSize(600, 400);

        // Crear un nuevo JPanel para contener la JTable
        JPanel panel = new JPanel();

        // Crear una nueva JTable y un JScrollPane para agregar desplazamiento
        JTable table = new JTable(modelo);
        JScrollPane scrollPane = new JScrollPane(table);

        // Obtener los datos del archivo de texto "estudiantes.txt" y actualizar el modelo de la JTable
        actualizarModelo();

        // Agregar la JTable con JScrollPane al JPanel
        panel.add(scrollPane);

        // Agregar el JPanel al JFrame y hacer visible el JFrame
        frame.add(panel);
        frame.setVisible(true);
        
        frame.setLocationRelativeTo(null);
        
        
        

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        
          new PantallaP().setVisible(true);
        this.setVisible(false); // para moverse emtre GUIs
        

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseEntered

        jButton1.setBackground(new Color (0,153,102)); 
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1MouseEntered

    private void jButton1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseExited

  jButton1.setBackground(new Color (0,0,0));       
    }//GEN-LAST:event_jButton1MouseExited

    private void jButton2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseEntered

          jButton2.setBackground(new Color (0,153,102));
    }//GEN-LAST:event_jButton2MouseEntered

    private void jButton2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseExited

          jButton2.setBackground(new Color (0,0,0));   
    }//GEN-LAST:event_jButton2MouseExited

    
    private void actualizarModelo() {
        // Limpiar el modelo antes de actualizarlo para evitar duplicados
        modelo.setRowCount(0);

        // Obtener los datos del archivo de texto "estudiantes.txt" y agregarlos al modelo de la JTable
        ArrayList<String[]> datos = obtenerDatosDesdeArchivo("estudiantes.txt");
        for (String[] fila : datos) {
            modelo.addRow(fila);
        }
    }
    

   private ArrayList<String[]> obtenerDatosDesdeArchivo(String nombreArchivo) {
    ArrayList<String[]> datos = new ArrayList<>(); // ArrayList para almacenar los datos

    // Leer el archivo de texto línea por línea y almacenar los datos en el ArrayList
    try (BufferedReader reader = new BufferedReader(new FileReader(new File(nombreArchivo)))) {
        String linea;
        while ((linea = reader.readLine()) != null) {
            String[] campos = linea.split(","); // Separar la línea en campos utilizando la coma como delimitador
            datos.add(campos); // Agregar los campos al ArrayList
        }
    } catch (IOException ex) { // Maneja posibles errores 
        ex.printStackTrace(); 
    }

    return datos; // Devolver el ArrayList con los datos del archivo
}

    
    
    private ArrayList<String[]> obtenerDatosFiltrados(String nombreArchivo, String filtroPromedio, String filtroCarrera) {
    ArrayList<String[]> datosFiltrados = new ArrayList<>();

    try (BufferedReader reader = new BufferedReader(new FileReader(new File(nombreArchivo)))) {
        String linea;
        while ((linea = reader.readLine()) != null) {
            String[] campos = linea.split(","); // Separar la línea en campos utilizando la coma como delimitador
            if (campos.length == 3) { // Verificar que haya tres campos en la línea
                String id = campos[0]; // Obtener el nombre
                String carrera = campos[1]; // Obtener la carrera
                double promedio = Double.parseDouble(campos[2]); // Obtener el promedio como un número double

                // Verificar si la línea cumple con los filtros de promedio y carrera
                boolean cumplePromedioFiltro = filtroPromedio.equals("Todos") ||
                        (filtroPromedio.equals("Promedio >= 70") && promedio >= 70) ||
                        (filtroPromedio.equals("Promedio < 70") && promedio < 70);

                boolean cumpleCarreraFiltro = filtroCarrera.equals("Todas") ||
                        carrera.equalsIgnoreCase(filtroCarrera);

                // Si la línea cumple con ambos filtros, agregarla a los datos filtrados
                if (cumplePromedioFiltro && cumpleCarreraFiltro) {
                    datosFiltrados.add(new String[]{id, carrera, String.valueOf(promedio)});
                }
            }
        }
    } catch (IOException ex) { // Manejar posibles errores de entrada/salida
        ex.printStackTrace(); // Imprimir la traza de la excepción
    }

    return datosFiltrados; // Devolver los datos filtrados
}

    
 
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Listas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Listas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Listas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Listas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Listas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
