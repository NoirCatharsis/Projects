
package GUI;

import Logica.Estudiante;
import Logica.GenerarPromedios;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

public class Registro extends javax.swing.JFrame {
    
    // ArrayList de la clase estudiantes llamda listaEstudiantes
    private ArrayList<Estudiante> listaEstudiantes = new ArrayList<>();

    public Registro() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("Agregar Informacion");
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jDialog1 = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        ID = new javax.swing.JTextField();
        Camponombre = new javax.swing.JTextField();
        CampoApellido1 = new javax.swing.JTextField();
        CampoApellido2 = new javax.swing.JTextField();
        CajaCarrera = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        Proyecto1 = new javax.swing.JTextField();
        Proyecto2 = new javax.swing.JTextField();
        Foro = new javax.swing.JTextField();
        Encuesta = new javax.swing.JTextField();
        Juego = new javax.swing.JTextField();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 241, 232));
        jPanel1.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.setFocusTraversalPolicyProvider(true);
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("ID: ");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 20, 40, 50));

        jLabel2.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Nombre:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 60, 80, 50));

        jLabel3.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Apellido 1:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 100, 30));

        jLabel4.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Apellido 2: ");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, -1, 30));

        jLabel5.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Carrera:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 200, 110, 30));

        ID.setBackground(new java.awt.Color(255, 241, 232));
        ID.setFont(new java.awt.Font("NSimSun", 0, 14)); // NOI18N
        ID.setForeground(new java.awt.Color(0, 0, 0));
        ID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDActionPerformed(evt);
            }
        });
        jPanel1.add(ID, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 30, 330, 30));

        Camponombre.setBackground(new java.awt.Color(255, 241, 232));
        Camponombre.setFont(new java.awt.Font("NSimSun", 0, 14)); // NOI18N
        Camponombre.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(Camponombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 70, 330, 30));

        CampoApellido1.setBackground(new java.awt.Color(255, 241, 232));
        CampoApellido1.setFont(new java.awt.Font("NSimSun", 0, 14)); // NOI18N
        CampoApellido1.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(CampoApellido1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 120, 330, 30));

        CampoApellido2.setBackground(new java.awt.Color(255, 241, 232));
        CampoApellido2.setFont(new java.awt.Font("NSimSun", 0, 14)); // NOI18N
        CampoApellido2.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(CampoApellido2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 160, 330, 30));

        CajaCarrera.setBackground(new java.awt.Color(255, 241, 232));
        CajaCarrera.setFont(new java.awt.Font("NSimSun", 0, 14)); // NOI18N
        CajaCarrera.setForeground(new java.awt.Color(0, 0, 0));
        CajaCarrera.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Informatica", "Administracion", "Criminologia", "Contaduria", "Educacion" }));
        jPanel1.add(CajaCarrera, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 210, 140, -1));

        jButton1.setBackground(new java.awt.Color(255, 204, 204));
        jButton1.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 0));
        jButton1.setText("Agregar");
        jButton1.setBorderPainted(false);
        jButton1.setFocusPainted(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 540, 180, 50));

        jButton2.setBackground(new java.awt.Color(161, 130, 98));
        jButton2.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Limpiar");
        jButton2.setBorderPainted(false);
        jButton2.setFocusPainted(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 540, 180, 50));

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/566095.png"))); // NOI18N
        jButton3.setBorderPainted(false);
        jButton3.setContentAreaFilled(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 10, 130, 70));

        jButton4.setBackground(new java.awt.Color(255, 204, 204));
        jButton4.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        jButton4.setForeground(new java.awt.Color(0, 0, 0));
        jButton4.setText("Modificar Info Personal");
        jButton4.setBorderPainted(false);
        jButton4.setFocusPainted(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 540, 250, 50));

        jLabel6.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Proyecto1");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 260, 90, 20));

        jLabel7.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Proyecto2");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 260, 90, 30));

        jLabel8.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Foro");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 320, -1, -1));

        jLabel9.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("Encuesta");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 320, 80, 20));

        jLabel10.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Juego");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 390, 50, 20));

        Proyecto1.setBackground(new java.awt.Color(255, 241, 232));
        Proyecto1.setFont(new java.awt.Font("NSimSun", 0, 12)); // NOI18N
        Proyecto1.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(Proyecto1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 260, 70, -1));

        Proyecto2.setBackground(new java.awt.Color(255, 241, 232));
        Proyecto2.setFont(new java.awt.Font("NSimSun", 0, 12)); // NOI18N
        Proyecto2.setForeground(new java.awt.Color(0, 0, 0));
        Proyecto2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Proyecto2ActionPerformed(evt);
            }
        });
        jPanel1.add(Proyecto2, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 270, 70, -1));

        Foro.setBackground(new java.awt.Color(255, 241, 232));
        Foro.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(Foro, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 320, 70, -1));

        Encuesta.setBackground(new java.awt.Color(255, 241, 232));
        Encuesta.setFont(new java.awt.Font("NSimSun", 0, 12)); // NOI18N
        jPanel1.add(Encuesta, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 320, 70, -1));

        Juego.setBackground(new java.awt.Color(255, 241, 232));
        Juego.setFont(new java.awt.Font("NSimSun", 0, 12)); // NOI18N
        Juego.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(Juego, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 390, 70, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void IDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDActionPerformed

    }//GEN-LAST:event_IDActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

    // Obtener datos de los campos de entrada
    String id = ID.getText().trim();
    String nombre = Camponombre.getText().trim();
    String apellido1 = CampoApellido1.getText().trim();
    String apellido2 = CampoApellido2.getText().trim();
    String carrera = CajaCarrera.getSelectedItem().toString();

    // Validar que el ID tenga 9 caracteres numéricos
    if (id.length() != 9 || !id.matches("\\d+")) {
    mostrarMensaje("El ID debe tener exactamente 9 caracteres numéricos.");
    return;
    }

    
    
    // Verificar si el ID ya existe
boolean idExistente = false;
File archivoEstudiantes = new File("estudiantes.txt");

// revisar si el archivo existe
if (archivoEstudiantes.exists()) {
    try (BufferedReader reader = new BufferedReader(new FileReader(archivoEstudiantes))) {
        // variable para leer el archivo
        String linea;
        while ((linea = reader.readLine()) != null) {
            // almacena el id en un campo del array temporal
            String[] campos = linea.split(",");
            if (campos[0].equals(id)) {
                // si se encuentra el id, mostrar mensaje y salir del método
                mostrarMensaje("El ID ya está registrado. Ingrese un ID único.");
                return;
            }
        }
    } catch (IOException ex) {
        mostrarMensaje("Error al leer el archivo de estudiantes.");
        return;
    }
}





// Si el ID ya existe, mostrar mensaje y salir
if (idExistente) {
    mostrarMensaje("El ID ya está registrado. Ingrese un ID único.");
    return;
}

// Validar longitud mínima de campos
if (nombre.length() < 3 || apellido1.length() < 3 || apellido2.length() < 3) {
    mostrarMensaje("Los campos Nombre, Apellido1 y Apellido2 deben tener al menos 3 caracteres.");
    return;
}

// Obtener y validar los datos numéricos
    try {
        
    double proyecto1 = Double.parseDouble(Proyecto1.getText().trim());
    double proyecto2 = Double.parseDouble(Proyecto2.getText().trim());
    double foro = Double.parseDouble(Foro.getText().trim());
    double encuesta = Double.parseDouble(Encuesta.getText().trim());
    double juego = Double.parseDouble(Juego.getText().trim());

    if (proyecto1 > 100 || proyecto2 > 100 || foro > 100 || encuesta > 100 || juego > 100) {
        mostrarMensaje("Uno o más valores son mayores o iguales a 100.");
        return;
    }

    // Calcular el promedio
    double promedioFinal = GenerarPromedios.calcularPromedioFinal(proyecto1, proyecto2, foro, encuesta, juego);
    
    // Convertir el promedio a String
    String promedioString = String.valueOf(promedioFinal);
    
    // Crear un nuevo objeto Estudiante y agregarlo al ArrayList
    Estudiante e = new Estudiante();
    e.setId(id);
    e.setNombre(nombre);
    e.setApellido1(apellido1);
    e.setApellido2(apellido2);
    e.setCarrera(carrera);
    e.setPromedio(promedioString); // Establecer el promedio como String
    listaEstudiantes.add(e);
    
    // Guardar el promedio en el archivo
    guardarPromedioFinal(id, carrera, promedioFinal);
    
    // Guardar en el archivo
    guardarEstudiantesEnArchivo();
    
    // Mostrar mensaje de éxito
    mostrarMensaje("Registro guardado correctamente.");
} catch (NumberFormatException exc) {
    mostrarMensaje("Los campos Proyecto1, Proyecto2, Foro, Encuesta y Juego deben ser números válidos.");
}



    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

    ID.setText("");
    Camponombre.setText("");
    CampoApellido1.setText("");
    CampoApellido2.setText("");
    CajaCarrera.setSelectedIndex(0);
    Encuesta.setText("");
    Foro.setText("");
    Juego.setText("");
    Proyecto1.setText("");
    Proyecto2.setText("");
           
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

         
        new ManipulacionE().setVisible(true);
        this.setVisible(false); // para moverse emtre GUIs
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

    // Obtener y limpiar el ID del campo de texto
    String id = ID.getText().trim();

// Validar que el ID tenga 9 caracteres numéricos
    if (id.length() != 9 || !id.matches("\\d+")) {
    mostrarMensaje("El ID debe tener exactamente 9 caracteres numéricos.");
    return; 
    }

// Verificar si el ID existe en el archivo "estudiantes.txt"
    boolean idExistente = false;
    List<String> lineasEstudiantes = new ArrayList<>();
    File archivoEstudiantes = new File("estudiantes.txt");

// Comprobar si el archivo de estudiantes existe
    if (archivoEstudiantes.exists()) {
    try (BufferedReader reader = new BufferedReader(new FileReader(archivoEstudiantes))) {
        String linea;

        // Leer el archivo línea por línea
        while ((linea = reader.readLine()) != null) {
            String[] campos = linea.split(",");
            
            // Si el ID existe, marcarlo como encontrado
            if (campos[0].equals(id)) {
                idExistente = true;
            } else {
                // de otra manera escribe en la lista de lineasEstudiantes
                lineasEstudiantes.add(linea);
            }
        }
    } catch (IOException ex) {
        mostrarMensaje("Error al leer el archivo de estudiantes.");
        return; // Terminar la ejecución en caso de error de lectura
    }
}

    
// Si el ID no existe, muestra mensaje
if (!idExistente) {
    mostrarMensaje("El ID ingresado no está registrado.");
    return; // Terminar la ejecución si el ID no existe
}

// Obtener los nuevos datos del estudiante
String nombre = Camponombre.getText().trim();
String apellido1 = CampoApellido1.getText().trim();
String apellido2 = CampoApellido2.getText().trim();
String carrera = CajaCarrera.getSelectedItem().toString();

// Validar longitud mínima de campos
    if (nombre.length() < 3 || apellido1.length() < 3 || apellido2.length() < 3) {
    mostrarMensaje("Los campos Nombre, Apellido1 y Apellido2 deben tener al menos 3 caracteres.");
    return; // Terminar la ejecución si algún campo tiene una longitud inferior a 3 caracteres
}

// Obtener y validar los datos numéricos
    try {
    double proyecto1 = Double.parseDouble(Proyecto1.getText().trim());
    double proyecto2 = Double.parseDouble(Proyecto2.getText().trim());
    double foro = Double.parseDouble(Foro.getText().trim());
    double encuesta = Double.parseDouble(Encuesta.getText().trim());
    double juego = Double.parseDouble(Juego.getText().trim());

    // Validar que los valores numéricos estén en el rango correcto
    if (proyecto1 > 100 || proyecto2 > 100 || foro > 100 || encuesta > 100 || juego > 100) {
        mostrarMensaje("Uno o más valores son mayores o iguales a 100.");
        return; // Terminar la ejecución si algún valor excede 100
    }

    // Calcular el promedio
  double promedioFinal = GenerarPromedios.calcularPromedioFinal(proyecto1, proyecto2, foro, encuesta, juego);

    // Modificar el registro en el archivo "estudiantes.txt"
  String registroModificado = String.join(",", id, String.join(" ", nombre, apellido1, apellido2), carrera, String.valueOf(promedioFinal));
  lineasEstudiantes.add(registroModificado);
  escribirEnArchivo("estudiantes.txt", lineasEstudiantes, false);

    // Modificar el promedio en el archivo "promedios.txt"
modificarPromedioFinal(id, carrera, promedioFinal);

    // Mostrar mensaje de éxito
    mostrarMensaje("Registro modificado correctamente.");
    } catch (NumberFormatException exc) {
    mostrarMensaje("Los campos Proyecto1, Proyecto2, Foro, Encuesta y Juego deben ser números válidos.");
    }

    
    
    }//GEN-LAST:event_jButton4ActionPerformed

    private void Proyecto2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Proyecto2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Proyecto2ActionPerformed

 
    
private void guardarEstudiantesEnArchivo() {
    
   // instancia de la clase archivo , para crear el archivo    
    File archivoEstudiantes = new File("estudiantes.txt");
    
    // va a intentar escribir en el archivo 
    try (BufferedWriter writer = new BufferedWriter(new FileWriter(archivoEstudiantes, true))) {
       // for each para recorrer el array de listaEstudiantes
        for (Estudiante estudiante : listaEstudiantes) {
            
            // a la variable linea se le a va a asignar todos los elementos que se quieren agregar separados por una coma
            
            String linea = String.join(",", estudiante.getId(),
                    String.join(" ", estudiante.getNombre(), estudiante.getApellido1(), estudiante.getApellido2()),
                    estudiante.getCarrera(),String.valueOf(estudiante.getPromedio())); 
          
           writer.write(linea + System.lineSeparator());
            
            // escribe los elementos y separa el siguiente registro con un espacio
        }
    } catch (IOException ex) {
        mostrarMensaje("Error al escribir en el archivo de estudiantes.");
    }
}




private void guardarPromedioFinal(String id,String carrera, double promedioFinal) {
    
   // instancia que vamos a usar para dejar los promedios en 2 digitos
    DecimalFormat df = new DecimalFormat("#.##");
     
    // convertimos esto en string , para meterlo al archivo y se formatea
    
    String promedioFormateado = df.format(promedioFinal);

    try (BufferedWriter writerPromedios = new BufferedWriter(new FileWriter("promedios.txt", true))) {
        
        // creamos un archivo y escribimos en el 
        
        writerPromedios.write(String.join(",",id, carrera, promedioFormateado) + "\n");
        
    } catch (IOException ex) {
        mostrarMensaje("Error al escribir en el archivo de promedios.");
    }
    
}


// funcion para no ahorrar tiempo

public void mostrarMensaje(String mensaje) {
    JOptionPane.showMessageDialog(null, mensaje);
}


    
private void modificarPromedioFinal(String id, String carrera, double promedioFinal) {
    
    // Formatear el promedio final a dos decimales
    DecimalFormat df = new DecimalFormat("#.##");
    
    String promedioFormateado = df.format(promedioFinal);

    // Crear un objeto File para el archivo de promedios
    File archivoPromedios = new File("promedios.txt");
    
    // Lista para almacenar los nuevos registros del archivo de promedios
    List<String> lineasPromedios = new ArrayList<>();

    // Verificar si el archivo de promedios existe
    if (archivoPromedios.exists()) {
        try (BufferedReader reader = new BufferedReader(new FileReader(archivoPromedios))) {
            String linea;
            // Leer el archivo de promedios línea por línea
            while ((linea = reader.readLine()) != null) {
                
                // Separar la línea en campos utilizando la coma como delimitador 
                String[] campos = linea.split(",");
                
                // Verificar si el ID coincide con el ID proporcionado
                if (campos[0].equals(id)) {
                    
                    // Si coincide, reemplazar la ingresado con el ID, carrera y promedio formateado
                    lineasPromedios.add(String.join(",", id, carrera, promedioFormateado));
                } else {
                    // Si no coincide, agregar la línea tal y como está
                    lineasPromedios.add(linea);
                }
            }
        } catch (IOException ex) {
            mostrarMensaje("Error al leer el archivo de promedios."); // Mostrar mensaje de error en caso de fallo de lectura
            return; 
        }
    }

    // Escribir las líneas actualizadas en el archivo de promedios
    escribirEnArchivo("promedios.txt", lineasPromedios, false);
}



public void escribirEnArchivo(String ruta, List<String> lineas, boolean agregarAlFinal) {
    
    // Intenta abrir un BufferedWriter para escribir en el archivo especificado
    
    // La variable agregarAlFinal determina si se agrega al final del archivo o se sobrescribe
    
    try (BufferedWriter writer = new BufferedWriter(new FileWriter(ruta, agregarAlFinal))) {
        
        // Itera sobre cada registro o linea proporcionadas
        
        for (String linea : lineas) {
            // Escribe la línea en el archivo y agrega un salto de línea
            writer.write(linea + System.lineSeparator());
            
        }
    } catch (IOException ex) { 
        // Si ocurre un error, muestra un mensaje indicando el problema y la ruta del archivo afectado
        mostrarMensaje("Error al escribir en el archivo: " + ruta);
    }
}



    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Registro().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CajaCarrera;
    private javax.swing.JTextField CampoApellido1;
    private javax.swing.JTextField CampoApellido2;
    private javax.swing.JTextField Camponombre;
    private javax.swing.JTextField Encuesta;
    private javax.swing.JTextField Foro;
    private javax.swing.JTextField ID;
    private javax.swing.JTextField Juego;
    private javax.swing.JTextField Proyecto1;
    private javax.swing.JTextField Proyecto2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
