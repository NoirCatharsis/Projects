
package GUI;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;


public class EliminarE extends javax.swing.JFrame {

    Registro r = new Registro();

    public EliminarE() {
        initComponents();
         this.setLocationRelativeTo(null);
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        CampoID = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 241, 232));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Digite el ID del registro que quiere eliminar ...");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 90, 440, 60));

        CampoID.setBackground(new java.awt.Color(255, 241, 232));
        CampoID.setFont(new java.awt.Font("NSimSun", 0, 14)); // NOI18N
        CampoID.setForeground(new java.awt.Color(0, 0, 0));
        CampoID.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        CampoID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CampoIDActionPerformed(evt);
            }
        });
        jPanel1.add(CampoID, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 190, 390, 70));

        jPanel2.setBackground(new java.awt.Color(255, 153, 102));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/566095.png"))); // NOI18N
        jButton1.setBorderPainted(false);
        jButton1.setContentAreaFilled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jButton1)
                .addGap(0, 576, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 540, 710, 100));

        jButton2.setBackground(new java.awt.Color(255, 102, 102));
        jButton2.setFont(new java.awt.Font("NSimSun", 1, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 0, 0));
        jButton2.setText("Borrar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 300, 170, 40));

        jButton3.setBackground(new java.awt.Color(255, 102, 102));
        jButton3.setFont(new java.awt.Font("NSimSun", 1, 18)); // NOI18N
        jButton3.setForeground(new java.awt.Color(0, 0, 0));
        jButton3.setText("Limpiar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 300, 170, 40));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 700, 640));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed


        
         new ManipulacionE().setVisible(true);
        this.setVisible(false); // para moverse emtre GUIs
        
        
        
        

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

    // Obtener el ID del campo de texto y eliminar espacios en blanco al inicio y al final
    String id = CampoID.getText().trim();

    // Validar que el ID tenga 9 caracteres numéricos
    if (id.length() != 9 || !id.matches("\\d+")) {
    r.mostrarMensaje("El ID debe tener exactamente 9 caracteres numéricos.");
    return;
    }

    // Verificar si el ID existe en el archivo "estudiantes.txt"
    // Usa la misma lógica que en los métodos anteriores para validar si el ID existe
    boolean idExistente = false;
    
    List<String> lineasEstudiantes = new ArrayList<>();
    
    File archivoEstudiantes = new File("estudiantes.txt");

// Comprobar si el archivo de estudiantes existe
if (archivoEstudiantes.exists()) {
    
    try (BufferedReader reader = new BufferedReader(new FileReader(archivoEstudiantes))) {
        
        String linea;
        // Leer el archivo línea por línea
        while ((linea = reader.readLine()) != null) {
            
            String[] campos = linea.split(",");
            // Si el ID de la línea es diferente al ID ingresado, agregar la línea a la lista
            if (!campos[0].equals(id)) {
                
                lineasEstudiantes.add(linea);
            } else {
                // Si el ID coincide, marcar idExistente como true
                idExistente = true;
            }
        }
    } catch (IOException ex) {
        r.mostrarMensaje("Error al leer el archivo de estudiantes.");
        return;
    }
}

// Si el ID no existe, mostrar mensaje y salir
if (!idExistente) {
    r.mostrarMensaje("El ID ingresado no está registrado.");
    return;
}

    // Eliminar el registro del archivo "estudiantes.txt"
    // Sobrescribir el archivo con la lista lineasEstudiantes (sin la línea del ID a eliminar)
    r.escribirEnArchivo("estudiantes.txt", lineasEstudiantes, false);

// Eliminar el promedio del archivo "promedios.txt"
eliminarPromedioFinal(id);

// Mostrar mensaje de éxito
r.mostrarMensaje("Registro eliminado correctamente.");

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

       CampoID.setText("");
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void CampoIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CampoIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CampoIDActionPerformed

    
   private void eliminarPromedioFinal(String id) {
    // Crear un objeto File para el archivo de promedios
    File archivoPromedios = new File("promedios.txt");
    
    // Lista para almacenar los regiatros del archivo de promedios
    List<String> lineasPromedios = new ArrayList<>();

    // Verificar si el archivo de promedios existe
    if (archivoPromedios.exists()) {
        try (BufferedReader reader = new BufferedReader(new FileReader(archivoPromedios))) {
            
            String linea;
            // Lee el archivo de promedios línea por línea
            while ((linea = reader.readLine()) != null) {
                
                // Separar la línea o registrozs en campos utilizando la coma como delimitador
                String[] campos = linea.split(",");
                
                // Si el ID de la línea no coincide con el ID proporcionado, agregar la línea a la lista
                
                if (!campos[0].equals(id)) {
                    
                    lineasPromedios.add(linea);
                }
            }
        } catch (IOException ex) {
            // Mostrar mensaje de error en caso de fallo de lectura
            r.mostrarMensaje("Error al leer el archivo de promedios.");
            return; // Salir de la función en caso de error
        }
    }

    // Escribir las líneas actualizadas en el archivo de promedios
    r.escribirEnArchivo("promedios.txt", lineasPromedios, false);
}

    
    

        
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EliminarE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EliminarE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EliminarE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EliminarE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EliminarE().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CampoID;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
